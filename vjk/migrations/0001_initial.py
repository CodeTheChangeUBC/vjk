# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-07-01 20:35
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=75, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+16045555555'.", regex='^\\+?1?\\d{10,12}$')], verbose_name='Phone')),
                ('address_line1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address - Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address - Line 2')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='City')),
                ('province', models.CharField(blank=True, choices=[('NL', 'Newfoundland and Labrador'), ('MB', 'Manitoba'), ('PE', 'Prince Edward Island'), ('SK', 'Saskatchewan'), ('AB', 'Alberta'), ('YT', 'Yukon'), ('NS', 'Nova Scotia'), ('QC', 'Quebec'), ('NU', 'Nunavut'), ('BC', 'British Columbia'), ('NT', 'Northwest Territories'), ('NB', 'New Brunswick'), ('ON', 'Ontario')], max_length=20, null=True, verbose_name='Province')),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Postal Code')),
            ],
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Year')),
                ('amount_contributed', models.IntegerField(blank=True, null=True, verbose_name='Amount Contributed')),
                ('service_provided', models.TextField(blank=True, null=True, verbose_name='Service Provided')),
                ('volunteer_hours', models.IntegerField(blank=True, null=True, verbose_name='Volunteer Hours')),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.CharField(max_length=50, verbose_name='Organization Name')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Location')),
                ('year_donation', models.IntegerField(blank=True, null=True, verbose_name='Year')),
                ('amount_donation', models.IntegerField(blank=True, null=True, verbose_name='Amount Donated')),
                ('primary_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='donor1', to='vjk.Contact', verbose_name='Primary Contact')),
                ('secondary_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='donor2', to='vjk.Contact', verbose_name='Secondary Contact')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('service_provided', models.CharField(blank=True, max_length=50, null=True, verbose_name='Provided Service')),
                ('primary_contact', models.ForeignKey(blank=True, default=-1, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sponsor1', to='vjk.Contact', verbose_name='Primary Contact')),
                ('secondary_contact', models.ForeignKey(blank=True, default=-1, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sponsor2', to='vjk.Contact', verbose_name='Primary Contact')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=75, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('school', models.CharField(blank=True, max_length=75, null=True, verbose_name='School')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+16045555555'.", regex='^\\+?1?\\d{10,12}$')], verbose_name='Number')),
                ('program_city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Program City')),
                ('year_attended', models.IntegerField(blank=True, null=True, verbose_name='Year Attended')),
                ('program_institution', models.CharField(blank=True, max_length=75, null=True, verbose_name='Institution')),
                ('address_line1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address - Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address - Line 2')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='City')),
                ('province', models.CharField(blank=True, choices=[('NL', 'Newfoundland and Labrador'), ('MB', 'Manitoba'), ('PE', 'Prince Edward Island'), ('SK', 'Saskatchewan'), ('AB', 'Alberta'), ('YT', 'Yukon'), ('NS', 'Nova Scotia'), ('QC', 'Quebec'), ('NU', 'Nunavut'), ('BC', 'British Columbia'), ('NT', 'Northwest Territories'), ('NB', 'New Brunswick'), ('ON', 'Ontario')], max_length=20, null=True, verbose_name='Province')),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Postal Code')),
                ('reference_fname', models.CharField(default='', max_length=75, verbose_name='Ref. First Name')),
                ('reference_lname', models.CharField(default='', max_length=75, verbose_name='Ref. Last Name')),
                ('reference_email', models.EmailField(default='', max_length=254, verbose_name='Ref. Email')),
                ('reference_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+16045555555'.", regex='^\\+?1?\\d{10,12}$')], verbose_name='Ref. Number')),
                ('reference_address_line1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ref. Addr - Line 1')),
                ('reference_address_line2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ref. Addr - Line 2')),
                ('reference_city', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ref. City')),
                ('reference_province', models.CharField(blank=True, choices=[('NL', 'Newfoundland and Labrador'), ('MB', 'Manitoba'), ('PE', 'Prince Edward Island'), ('SK', 'Saskatchewan'), ('AB', 'Alberta'), ('YT', 'Yukon'), ('NS', 'Nova Scotia'), ('QC', 'Quebec'), ('NU', 'Nunavut'), ('BC', 'British Columbia'), ('NT', 'Northwest Territories'), ('NB', 'New Brunswick'), ('ON', 'Ontario')], max_length=20, null=True, verbose_name='Ref. Province')),
                ('reference_postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Ref. Postal Code')),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=75, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+16045555555'.", regex='^\\+?1?\\d{10,12}$')], verbose_name='Number')),
                ('address_line1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address Line - 1')),
                ('address_line2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address Line - 2')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='City')),
                ('province', models.CharField(blank=True, choices=[('NL', 'Newfoundland and Labrador'), ('MB', 'Manitoba'), ('PE', 'Prince Edward Island'), ('SK', 'Saskatchewan'), ('AB', 'Alberta'), ('YT', 'Yukon'), ('NS', 'Nova Scotia'), ('QC', 'Quebec'), ('NU', 'Nunavut'), ('BC', 'British Columbia'), ('NT', 'Northwest Territories'), ('NB', 'New Brunswick'), ('ON', 'Ontario')], max_length=20, null=True, verbose_name='Province')),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Postal Code')),
                ('role', models.CharField(blank=True, max_length=75, null=True, verbose_name='Role')),
                ('years_helped', models.CharField(blank=True, default='', max_length=75, null=True, verbose_name='Years Helped')),
            ],
        ),
        migrations.AddField(
            model_name='contribution',
            name='donor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vjk.Donor', verbose_name='Donor'),
        ),
        migrations.AddField(
            model_name='contribution',
            name='sponsor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vjk.Sponsor', verbose_name='Sponsor'),
        ),
        migrations.AddField(
            model_name='contribution',
            name='volunteer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vjk.Volunteer', verbose_name='Volunteer'),
        ),
    ]
